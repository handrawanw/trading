{"version":3,"sources":["Fungsi/soket.js","Store/actionRedux/TabelMarketAction.js","Fungsi/hitungOrder.js","Component/TabelJual.js","Form/formBeli.js","Store/actionRedux/infoUserRedux.js","Fungsi/beli.js","Form/formJual.js","Fungsi/Jual.js","Component/trafik.js","Component/TabelBeli.js","Fungsi/refund.js","Component/TabelHistory.js","Auth.js","Form/ButtonLogout.js","Fungsi/Login.js","Pages/DashboardClone.js","Store/actionRedux/historyTrade.js","Form/FormLogin.js","Pages/Login.js","Form/FormDaftar.js","Fungsi/Daftar.js","Pages/Daftar.js","ProteksiRoute.js","App.js","serviceWorker.js","Store/storeRedux/TabelMarketStore.js","Store/storeRedux/infoUserStore.js","Store/storeRedux/storeHistory.js","Store/index.js","index.js"],"names":["SocketIO","io","process","localStorage","getItem","jwt","SetTradeJualAll","type","market","SetTradeBeliAll","SetTradeAll","OrderCount","marketData","newCount","finalData","forEach","item","Object","keys","includes","harga","jumlah","total","tipe","entries","value","push","key","TabelJual","Judul","dispatch","useDispatch","useSelector","state","TradeState","id","React","useEffect","on","data","marketDataJual","JSON","parse","tradeAll","myOrder","filter","user","toString","finalCount","toUpperCase","sort","a","b","className","align","length","map","FormBeli","storeHistory","lastJual","highPrice","lowPrice","lastPriceAll","UserState","setForm","beli","saldo","User","infoUser","useState","DataBeli","setDataBeli","handleInput","e","target","validity","valid","name","status","Toast","success","setFormBeli","onSubmit","preventDefault","axios","url","method","headers","jwttoken","then","message","catch","err","msg","undefined","response","error","BeliSend","Number","for","pattern","onInput","FormJual","lastBeli","jual","codeo","DataJual","setDataJual","setFormJual","JualSend","Trafik","Data","setData","hargaTerakhir","hargaTertinggi","hargaTerendah","volume","hargaDeal","style","backgroundColor","TabelBeli","RefundSend","DataRefund","idMd5","TabelHistory","TradeMe","onClick","_id","this","isLogin","cb","clear","BTNLogout","history","useHistory","DataLogin","Auth","onLogout","LogoutSend","Dashboard","username","emit","stringify","token","setInfoUser","History","latestTrade","labelOld","tipeHistori","labelnew","dataBeli","dataJUal","Date","createdAt","toLocaleTimeString","toLocaleDateString","latestHarga","LabelNew","App","symbol","theme","Themes","DARK","locale","autosize","Container","fluid","Row","margin","Login","email","password","setDataLogin","onLogin","setItem","LoginSend","values","onChange","to","Daftar","DataDaftar","setDataDaftar","DaftarSend","ProteksiRoute","Component","component","rest","render","props","pathname","from","location","withRouter","exact","path","Boolean","window","hostname","match","initialState","TradeJual","TradeBeli","action","Grafik","HistoryStore","reverse","index","last","ReduxState","children","STORE","combineReducers","STORED","createStore","composeWithDevTools","applyMiddleware","reduxSoldierMiddleware","store","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.eaaa2aeb.chunk.js","sourcesContent":["import io from \"socket.io-client\";\r\nimport jwt from \"jwt-decode\";\r\n\r\nexport let SocketIO = io(process.env.REACT_APP_URL_LOCALHOST);\r\n\r\nexport let uuid=localStorage.getItem(\"token\")?jwt(localStorage.getItem(\"token\")):{};","export function SetTradeJualAll({market}) {\r\n  \r\n  return {\r\n    type:\"TradeJual\",\r\n    market,\r\n  }\r\n}\r\n\r\nexport function SetTradeBeliAll({market}) {\r\n  \r\n  return {\r\n    type:\"TradeBeli\",\r\n    market,\r\n  }\r\n}\r\n\r\nexport function SetTradeAll({market}) {\r\n  \r\n  return {\r\n    type:\"TradeAll\",\r\n    market,\r\n  }\r\n}","export function OrderCount({marketData}){\r\nlet MarketDataArray=marketData||[];\r\nlet newCount={},finalData=[];\r\n        MarketDataArray.forEach((item)=>{\r\n            if(!Object.keys(newCount).includes(\"x\"+item.harga)){\r\n                newCount[\"x\"+item.harga]={\r\n                    jumlah:0,\r\n                    harga:0,\r\n                    total:0\r\n                };\t\r\n            }\r\n            newCount[\"x\"+item.harga]={\r\n                jumlah:newCount[\"x\"+item.harga].jumlah+item.jumlah,\r\n                total:newCount[\"x\"+item.harga].total+item.total,\r\n                harga:item.harga,\r\n                tipe:item.tipe,\r\n            };\r\n        });\r\n        for(let [key,value] of Object.entries(newCount)){\r\n            finalData.push({key:value});\r\n        }\r\n    return finalData;\r\n}","import React from \"react\";\r\n\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n\r\nimport { SetTradeJualAll,SetTradeAll } from \"../Store/actionRedux/TabelMarketAction\";\r\n\r\nimport { SocketIO ,uuid} from \"../Fungsi/soket\";\r\nimport {OrderCount} from \"../Fungsi/hitungOrder\";\r\n\r\nimport jwt from \"jwt-decode\";\r\n\r\nexport default function TabelJual({Judul}){\r\n\r\n    let dispatch = useDispatch();\r\n    let { market } = useSelector((state) => state.TradeState[\"TradeJual\"]);\r\n    let {id}=localStorage.getItem(\"token\")?jwt(localStorage.getItem(\"token\")):{};\r\n\r\n    React.useEffect(() => {\r\n        SocketIO.on(\"tradeAll\", (data) => {\r\n            let marketDataJual = JSON.parse(data).tradeAll||[];\r\n            let myOrder=marketDataJual.filter((item)=>{\r\n                    return item.user?item.user.toString()===id.toString():null\r\n            });\r\n            let marketArray=marketDataJual?marketDataJual.filter((item) => item.tipe.toUpperCase() === \"JUAL\").sort((a, b) => b.harga - a.harga).filter((item)=>item.jumlah>0).sort((a, b) => b.harga - a.harga).sort((a, b) => b.jumlah - a.jumlah):[];\r\n            let finalCount=OrderCount({marketData:marketArray});\r\n            dispatch([SetTradeJualAll({ market:finalCount}),SetTradeAll({market:myOrder})]);\r\n        });\r\n      }, [Judul,dispatch,id]);\r\n    \r\n    return (\r\n            <div className=\"overScroll\">\r\n                <table className=\"table table-borderless\">\r\n                  <tbody align=\"left\">\r\n                    {\r\n                        !market?null:market.length<=0?<div>No data</div>:market.map((item)=>{\r\n                            return (\r\n                                <tr>\r\n                                    <td className=\"text-danger\">{item.key.harga}</td>\r\n                                    <td className=\"text-danger\">{item.key.jumlah}</td>\r\n                                    <td className=\"text-danger\">{item.key.total}</td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {setFormBeli} from \"../Store/actionRedux/infoUserRedux\";\r\n\r\nimport { BeliSend } from \"../Fungsi/beli\";\r\n\r\nexport default function FormBeli() {\r\n  \r\n  let dispatch=useDispatch();\r\n  let {lastJual,highPrice,lowPrice,lastPriceAll}=useSelector((state)=>state.storeHistory?state.storeHistory:{});\r\n  let {harga,jumlah}=useSelector((state)=>state.UserState.setForm.beli?state.UserState.setForm.beli:{});\r\n\r\n  const {saldo} = useSelector(state => state.UserState.User?state.UserState.User.infoUser?state.UserState.User.infoUser:{}:{});\r\n  \r\n  const [DataBeli, setDataBeli] = React.useState({\r\n    jumlah:\"\",\r\n    harga:\"\",\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    if (e.target.validity.valid) {\r\n      setDataBeli({ ...DataBeli, [e.target.name]: e.target.value });\r\n    };\r\n  }\r\n\r\n  const handleSubmitBeli = (e) => {\r\n    e.preventDefault();\r\n    BeliSend({ DataBeli:{\r\n      jumlah,\r\n      harga\r\n    }});\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(setFormBeli({\r\n      tipe:\"BELI\",\r\n      jumlah:DataBeli.jumlah,\r\n      harga:DataBeli.harga\r\n    }));\r\n  },[DataBeli,dispatch]);\r\n\r\n  return (\r\n    <div className=\"d-block\"> \r\n    <form onSubmit={handleSubmitBeli}>\r\n      <div className=\"form-group row\">\r\n          <div className=\"col-4 d-block\">\r\n            <div className=\"d-block mb-3\">\r\n              <div className=\"d-block\">\r\n                SALDO \r\n              </div>\r\n              <div className=\"d-block\">\r\n                {saldo?Number(saldo)-Number(jumlah)*Number(harga):0}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-block\">\r\n              <div className=\"d-block\">\r\n                Total Bayar\r\n              </div>\r\n              <div className=\"d-block\">\r\n                {Number(jumlah)*Number(harga)}\r\n              </div>\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-success form-control mt-2\">\r\n              BELI\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"col-8\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <label for=\"jumlah\">\r\n                  Jumlah\r\n                </label>\r\n                <div align=\"right\">\r\n                  0 IDR\r\n                </div>\r\n              </div>\r\n              <input type=\"text\" name={Object.keys(DataBeli)[0]} value={jumlah} pattern=\"\\d*\" onInput={handleInput} className=\"form-control\" />\r\n              <label for=\"jumlah\">\r\n                Harga\r\n              </label>\r\n              <input type=\"text\" name={Object.keys(DataBeli)[1]} value={harga} pattern=\"(\\d|\\.)*\" onInput={handleInput} className=\"form-control\" />\r\n            \r\n              <div className=\"d-block mt-1\">\r\n                Total Bayar : {Number(jumlah)*Number(harga)}\r\n              </div>\r\n              \r\n            </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-around\">\r\n        <button type=\"button\" className=\"btn btn-outline-success m-1\">25%</button>\r\n        <button type=\"button\" className=\"btn btn-outline-success m-1\">50%</button>\r\n        <button type=\"button\" className=\"btn btn-outline-success m-1\">75%</button>\r\n        <button type=\"button\" className=\"btn btn-outline-success m-1\">100%</button>\r\n      </div>\r\n\r\n    </form>\r\n    </div>\r\n  );\r\n}","import Toast from \"cogo-toast\";\r\n\r\nexport function setInfoUser({User}){\r\n  \r\n  return {\r\n    type: \"setInfoUser\",\r\n    User,\r\n  };\r\n}\r\n\r\nexport function setForm({tipe,jumlah,harga,status}){\r\n  if(status){\r\n    if(status===\"CLICK\"){\r\n      Toast.success(\"Item harga berhasil dipindahkan ke form\");\r\n    }\r\n  }\r\n  return {\r\n    type: \"setForm\",\r\n    tipe,\r\n    jumlah,\r\n    harga\r\n  };\r\n}\r\n\r\nexport function setFormJual({tipe,jumlah,harga,status}){\r\n  if(status){\r\n    if(status===\"CLICK\"){\r\n      Toast.success(\"Item harga berhasil dipindahkan ke form\");\r\n    }\r\n  }\r\n  return {\r\n    type: \"setFormJual\",\r\n    tipe,\r\n    jumlah,\r\n    harga\r\n  };\r\n}\r\n\r\nexport function setFormBeli({tipe,jumlah,harga,status}){\r\n  if(status){\r\n    if(status===\"CLICK\"){\r\n      Toast.success(\"Item harga berhasil dipindahkan ke form\");\r\n    }\r\n  }\r\n  return {\r\n    type: \"setFormBeli\",\r\n    tipe,\r\n    jumlah,\r\n    harga\r\n  };\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport Toast from \"cogo-toast\";\r\n\r\nexport function BeliSend({DataBeli}) {\r\n  axios({\r\n    url: `${process.env.REACT_APP_URL_LOCALHOST}/tradeBuy`,\r\n    method: \"POST\",\r\n    headers: {\r\n      jwttoken:localStorage.getItem(\"token\")\r\n    },\r\n    data: {\r\n      ...DataBeli\r\n    }\r\n  }).then(({ data }) => {\r\n    Toast.success(data.message);\r\n  }).catch((err) => {\r\n    let msg = \"\";\r\n    if (err.response === undefined) {\r\n      msg = err.message;\r\n    } else {\r\n      msg = err.response.data.message;\r\n    }\r\n    Toast.error(msg);\r\n  })\r\n}","import React from \"react\";\r\n\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {setFormJual} from \"../Store/actionRedux/infoUserRedux\";\r\n\r\nimport { JualSend } from \"../Fungsi/Jual\";\r\n\r\nexport default function FormJual() {\r\n\r\n  let dispatch=useDispatch();\r\n  let {lastBeli}=useSelector((state)=>state.storeHistory);\r\n  let {harga,jumlah}=useSelector((state)=>state.UserState.setForm.jual?state.UserState.setForm.jual:{});\r\n\r\n  const {codeo} = useSelector(state => state.UserState.User?state.UserState.User.infoUser?state.UserState.User.infoUser:{}:{});\r\n  \r\n  const [DataJual, setDataJual] = React.useState({\r\n    jumlah:\"\",\r\n    harga:\"\",\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    if (e.target.validity.valid) {\r\n      setDataJual({ ...DataJual, [e.target.name]: e.target.value });\r\n    };\r\n  }\r\n\r\n  const handleSubmitJual = (e) => {\r\n    e.preventDefault();\r\n    JualSend({DataJual:{\r\n      jumlah,\r\n      harga\r\n    }});\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(setFormJual({\r\n      tipe:\"JUAL\",\r\n      jumlah:DataJual.jumlah,\r\n      harga:DataJual.harga\r\n    }));\r\n  },[DataJual,dispatch]);\r\n\r\n  return (\r\n    <div className=\"d-block\">\r\n      <form onSubmit={handleSubmitJual}>\r\n        <div className=\"form-group row\">\r\n            <div className=\"col-4 d-block\">\r\n              <div className=\"d-block mb-3\">\r\n                <div className=\"d-block\">\r\n                  CODEO\r\n                </div>\r\n                <div className=\"d-block\">\r\n                    {codeo?codeo:0}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-block\">\r\n                <div className=\"d-block\">\r\n                  Last Price\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <small>\r\n                    {lastBeli?lastBeli:0}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-outline-danger form-control mt-2\">\r\n                JUAL \r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"col-8\">\r\n              \r\n              <div className=\"d-flex justify-content-between\">\r\n                <label for=\"jumlah\">\r\n                  Jumlah\r\n                </label>\r\n                <div align=\"right\">\r\n                  0 IDR\r\n                </div>\r\n              </div>\r\n\r\n              <input type=\"text\" name={Object.keys(DataJual)[0]} value={jumlah} pattern=\"\\d*\" onInput={handleInput} className=\"form-control\" />\r\n              <label for=\"jumlah\">\r\n                Harga\r\n              </label>\r\n              <input type=\"text\" name={Object.keys(DataJual)[1]} value={harga} pattern=\"(\\d|\\.)*\" onInput={handleInput} className=\"form-control\" />\r\n              \r\n              <div className=\"d-block mt-1\">\r\n                Total Bayar : {Number(jumlah)*Number(harga)}\r\n              </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-around\">\r\n          <button type=\"button\" className=\"btn btn-outline-success m-1\">25%</button>\r\n          <button type=\"button\" className=\"btn btn-outline-success m-1\">50%</button>\r\n          <button type=\"button\" className=\"btn btn-outline-success m-1\">75%</button>\r\n          <button type=\"button\" className=\"btn btn-outline-success m-1\">100%</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}","import axios from \"axios\";\r\nimport Toast from \"cogo-toast\";\r\n\r\nexport function JualSend({DataJual}) {\r\n  axios({\r\n    url: `${process.env.REACT_APP_URL_LOCALHOST}/tradeSell`,\r\n    method: \"POST\",\r\n    headers: {\r\n      jwttoken:localStorage.getItem(\"token\")\r\n    },\r\n    data: {\r\n      ...DataJual\r\n    }\r\n  }).then(({ data }) => {\r\n    Toast.success(data.message);\r\n  }).catch((err) => {\r\n    let msg = \"\";\r\n    if (err.response === undefined) {\r\n      msg = err.message;\r\n    } else {\r\n      msg = err.response.data.message;\r\n    }\r\n    Toast.error(msg);\r\n  })\r\n}","import React from \"react\";\r\n\r\nimport {SocketIO} from \"../Fungsi/soket\";\r\n\r\nexport default function Trafik(){\r\n\r\n    const [Data,setData]=React.useState(undefined);\r\n    \r\n    React.useEffect(()=>{\r\n        SocketIO.on(\"trafikHariIni\", (data) => {\r\n            let {hargaTerakhir,hargaTertinggi,hargaTerendah,volume}=JSON.parse(data);\r\n            setData({\r\n                hargaTerakhir:hargaTerakhir.hargaDeal,\r\n                hargaTertinggi:hargaTertinggi.hargaDeal,\r\n                hargaTerendah:hargaTerendah.hargaDeal,\r\n                volume:volume\r\n            });\r\n        });\r\n    },[setData]);\r\n\r\n    return (\r\n            <div className=\"row\" style={{backgroundColor:\"#252525\"}}>\r\n\r\n              <div className=\"col-xs-12 col-sm-6 col-md-6 col-md-6 col-lg-6 col-xl-6\">\r\n                <div className=\"d-block mt-2\">\r\n                    <div className=\"d-block\">\r\n                      <div>Harga Terakhir</div>\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                      <div>{Data?Data.hargaTerakhir:0}</div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              \r\n\r\n              <div className=\"col-xs-12 col-sm-6 col-md-6 col-md-6 col-lg-6 col-xl-6\">\r\n                <div className=\"d-block mt-2\">\r\n                    <div className=\"d-block\">\r\n                      <div>Tertinggi</div>\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                      <div>{Data?Data.hargaTertinggi:0}</div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-xs-12 col-sm-6 col-md-6 col-md-6 col-lg-6 col-xl-6\">\r\n                <div className=\"d-block mt-2\">\r\n                    <div className=\"d-block\">\r\n                      <div>Volume</div>\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                      <div>{Data?Data.volume:0}</div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-xs-12 col-sm-6 col-md-6 col-md-6 col-lg-6 col-xl-6\">\r\n                <div className=\"d-block mt-1\">\r\n                    <div className=\"d-block\">\r\n                      <div>Terendah</div>\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                      <div>{Data?Data.hargaTerendah:0}</div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n\r\nimport { SetTradeBeliAll,SetTradeAll } from \"../Store/actionRedux/TabelMarketAction\";\r\n\r\nimport { SocketIO ,uuid} from \"../Fungsi/soket\";\r\nimport {OrderCount} from \"../Fungsi/hitungOrder\";\r\n\r\nimport jwt from \"jwt-decode\";\r\n\r\nexport default function TabelBeli({Judul}){\r\n\r\n    let dispatch = useDispatch();\r\n    let { market } = useSelector((state) => state.TradeState[\"TradeBeli\"]);\r\n    let {id}=localStorage.getItem(\"token\")?jwt(localStorage.getItem(\"token\")):{};\r\n\r\n    React.useEffect(() => {\r\n        SocketIO.on(\"tradeAll\", (data) => {\r\n            let marketDataJual = JSON.parse(data).tradeAll||[];\r\n            let myOrder=marketDataJual.filter((item)=>{\r\n                    return item.user?item.user.toString()===id.toString():null\r\n            });\r\n            let marketArray=marketDataJual?marketDataJual.filter((item) => item.tipe.toUpperCase() === \"BELI\").sort((a, b) => b.harga - a.harga).filter((item)=>item.jumlah>0).sort((a, b) => b.harga - a.harga).sort((a, b) => b.jumlah - a.jumlah):[];\r\n            let finalCount=OrderCount({marketData:marketArray});\r\n            dispatch([SetTradeBeliAll({ market:finalCount}),SetTradeAll({market:myOrder})]);\r\n        });\r\n    }, [Judul,dispatch,id]);\r\n    \r\n    return (\r\n    <div className=\"overScroll\">\r\n        <table className=\"table table-borderless\">\r\n          <tbody align=\"left\">\r\n              {\r\n                  !market?null:market.length<=0?<div>No data</div>:market.map((item)=>{\r\n                      return (\r\n                        <tr>\r\n                            <td className=\"text-success\">{item.key.harga}</td>\r\n                            <td className=\"text-success\">{item.key.jumlah}</td>\r\n                            <td className=\"text-success\">{item.key.total}</td>\r\n                        </tr>\r\n                      );\r\n                  })\r\n              }\r\n          </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport Toast from \"cogo-toast\";\r\n\r\nexport function RefundSend({DataRefund}) {\r\n  axios({\r\n    url: `${process.env.REACT_APP_URL_LOCALHOST}/tradePay`,\r\n    method: \"POST\",\r\n    headers: {\r\n      jwttoken:localStorage.getItem(\"token\")\r\n    },\r\n    data: {\r\n      idMd5:DataRefund\r\n    }\r\n  }).then(({ data }) => {\r\n    Toast.success(data.message);\r\n  }).catch((err) => {\r\n    let msg = \"\";\r\n    if (err.response === undefined) {\r\n      msg = err.message;\r\n    } else {\r\n      msg = err.response.data.message;\r\n    }\r\n    Toast.error(msg);\r\n  })\r\n}","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport {RefundSend} from \"../Fungsi/refund\";\r\n\r\nexport default function TabelHistory(){\r\n    let { market } = useSelector((state) => state.TradeState.TradeMe);\r\n    \r\n    return (\r\n        <div className=\"overScroll\" style={{backgroundColor:\"#252525\"}}>\r\n            <table className=\"table table-borderless\">\r\n                <thead>\r\n                    <tr className=\"text-white\">\r\n                        <td>HARGA</td>\r\n                        <td>JUMLAH</td>\r\n                        <td>TOTAL</td>\r\n                        <td>Aksi</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        market?market.length>0?market.map((item) => {\r\n                        return (\r\n                            <tr>\r\n                                <td className=\"text-white\"><b>{item.harga}</b></td>\r\n                                <td className=\"text-white\"><b>{item.jumlah}</b></td>\r\n                                <td className=\"text-white\"><b>{item.total}</b></td>\r\n                                <td className=\"text-white\">\r\n                                    {\r\n                                        item.tipe===\"JUAL\"?\r\n                                            <button className=\"btn btn-outline-danger p-1\" onClick={()=>RefundSend({DataRefund:item._id})}>\r\n                                                <i className=\"fa fa-money\" />\r\n                                            </button>:(\r\n                                            <button className=\"btn btn-outline-success p-1\" onClick={()=>RefundSend({DataRefund:item._id})}>\r\n                                                <i className=\"fa fa-money\" />\r\n                                            </button>\r\n                                        )\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                        }):(\r\n                            <tr>\r\n                                <td className=\"text-white\">-</td>\r\n                                <td className=\"text-white\">-</td>\r\n                                <td className=\"text-white\">-</td>\r\n                                <td className=\"text-white\">\r\n                                -\r\n                                </td>\r\n                            </tr>\r\n                        ):(<tr>\r\n                            <td className=\"text-white\">-</td>\r\n                            <td className=\"text-white\">-</td>\r\n                            <td className=\"text-white\">-</td>\r\n                            <td className=\"text-white\">\r\n                            -\r\n                            </td>\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","class Auth {\r\n  constructor() {\r\n    this.isLogin = false;\r\n  }\r\n\r\n  onLogin(cb) {\r\n    this.isLogin = true;\r\n    cb();\r\n  }\r\n\r\n  onLogout(cb) {\r\n    cb();\r\n    this.isLogin = false;\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n\r\nexport default new Auth();","import React from \"react\";\r\n\r\nimport { LogoutSend } from \"../Fungsi/Login\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function BTNLogout() {\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <button className=\"btn btn-outline-danger\" onClick={()=>LogoutSend({history})}>Logout</button>\r\n  )\r\n}","import axios from \"axios\";\r\nimport Toast from \"cogo-toast\";\r\n\r\nimport Auth from \"../Auth\";\r\n\r\nexport default function LoginSend({ DataLogin,history }) {\r\n  axios({\r\n    url: `${process.env.REACT_APP_URL_LOCALHOST}/user/login`,\r\n    method: \"POST\",\r\n    headers: {\r\n      jwttoken:localStorage.getItem(\"token\")\r\n    },\r\n    data: {\r\n      ...DataLogin\r\n    }\r\n  }).then(({ data }) => {\r\n    Auth.onLogin(() => {\r\n      Toast.success(data.message);\r\n      localStorage.setItem(\"token\", data.token);\r\n      history.push(\"/trading/dashboard\");\r\n    })\r\n  }).catch((err) => {\r\n    let msg = \"\";\r\n    if (err.response === undefined) {\r\n      msg = err.message;\r\n    } else {\r\n      msg = err.response.data.message;\r\n    }\r\n    Toast.error(msg);\r\n  })\r\n}\r\n\r\nexport function LogoutSend({ DataLogin,history }) {\r\n  axios({\r\n    url: `${process.env.REACT_APP_URL_LOCALHOST}/user/logout`,\r\n    method: \"DELETE\",\r\n    headers: {\r\n      jwttoken:localStorage.getItem(\"token\")\r\n    }\r\n  }).then(({ data }) => {\r\n    Auth.onLogout(() => {\r\n      Toast.success(data.message);\r\n      localStorage.clear();\r\n      history.push(\"/trading\");\r\n    })\r\n  }).catch((err) => {\r\n    let msg = \"\";\r\n    if (err.response === undefined) {\r\n      msg = err.message;\r\n    } else {\r\n      msg = err.response.data.message;\r\n    }\r\n    Auth.onLogout(() => {\r\n      localStorage.clear();\r\n      history.push(\"/trading\");\r\n    })\r\n    Toast.error(msg);\r\n  })\r\n}","import React from \"react\";\r\nimport { Container,Row,Col } from \"reactstrap\";\r\n\r\nimport { SocketIO, uuid } from \"../Fungsi/soket\";\r\n\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport TabelJual from \"../Component/TabelJual\";\r\nimport FormBeli from \"../Form/formBeli\";\r\nimport FormJual from \"../Form/formJual\";\r\n\r\nimport Trafik from \"../Component/trafik.js\";\r\n\r\nimport TabelBeli from \"../Component/TabelBeli\";\r\nimport TabelHistory from \"../Component/TabelHistory\";\r\n\r\nimport Chart from \"../Chart/LineChartJual\";\r\nimport { setInfoUser } from \"../Store/actionRedux/infoUserRedux\";\r\nimport Toast from \"cogo-toast\";\r\n\r\nimport Logout from \"../Form/ButtonLogout\";\r\nimport {setChart} from \"../Store/actionRedux/historyTrade\";\r\n\r\nimport Auth from \"../Auth\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport jwt from \"jwt-decode\";\r\n\r\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\r\n\r\nimport \"./dclone.css\";\r\n\r\nexport default function Dashboard() {\r\n\r\n  let {id}=localStorage.getItem(\"token\")?jwt(localStorage.getItem(\"token\")):{};\r\n\r\n  let history=useHistory();\r\n  let dispatch = useDispatch();\r\n  const {username} = useSelector(state => state.UserState.User?state.UserState.User.infoUser?state.UserState.User.infoUser:{}:{});\r\n \r\n  React.useEffect(()=>{\r\n    SocketIO.emit(\"soketAuth\", JSON.stringify({ token: localStorage.getItem(\"token\") }));\r\n    if(id){\r\n      SocketIO.on(`infoUser${id}`, (data) => {\r\n        let user = JSON.parse(data);\r\n        if(user.infoUser){\r\n          dispatch(setInfoUser({ User: user }));\r\n          if(user.message){\r\n            Toast.success(user.message);\r\n          }\r\n        }else{\r\n          Auth.onLogout(()=>{\r\n            localStorage.clear();\r\n            history.push(\"/trading\");\r\n          });\r\n        }\r\n      });\r\n      \r\n      SocketIO.on(\"latestTrade\",(data)=>{\r\n        let History=JSON.parse(data).latestTrade;\r\n        let labelOld=History?History.filter((item)=>item.tipeHistori?item:null):[];\r\n        let labelnew=[],dataBeli=[],dataJUal=[];\r\n        labelOld.forEach((item)=> {\r\n          labelnew.push(new Date(item.createdAt).toLocaleTimeString()+\" \"+new Date(item.createdAt).toLocaleDateString())\r\n          if(item.tipeHistori.toUpperCase()===\"BELI\"){\r\n            dataBeli.push(item.latestHarga);\r\n          }else{\r\n            dataJUal.push(item.latestHarga);\r\n          }\r\n        });\r\n        dispatch(setChart({LabelNew:labelnew,Data:History,DataBeli:dataBeli,lastBeli:dataBeli[dataBeli.length-1],DataJual:dataJUal,lastJual:dataJUal[dataJUal.length-1]}));\r\n      })\r\n    }\r\n  },[dispatch,id,history]);\r\n\r\n\r\n  const App = () => (\r\n    <TradingViewWidget\r\n      symbol=\"BTC/USD\"\r\n      theme={Themes.DARK}\r\n      locale=\"id\"\r\n      autosize\r\n    />\r\n  );\r\n  \r\n  return ( \r\n    <Container fluid>\r\n      <Row>\r\n        <div className=\"col-4\" style={{backgroundColor:\"#2d2c31\"}}>\r\n            <div className=\"d-block m-3\">\r\n                Hello {username}\r\n            </div>\r\n        </div>\r\n        <div className=\"col-8\" style={{backgroundColor:\"#2d2c31\"}}>\r\n          <header>\r\n              <div className=\"d-flex justify-content-end\">\r\n                  <div className=\"d-block m-3\">\r\n                      <Logout />\r\n                  </div>\r\n                  <div className=\"d-block m-3\">\r\n                      <button className=\"btn btn-outline-success\">Daftar</button>\r\n                  </div>\r\n              </div>\r\n          </header>\r\n        </div>\r\n      </Row>\r\n\r\n      <Row>\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\" style={{backgroundColor:\"#252525\"}}>\r\n\r\n          <App />\r\n          \r\n          <TabelHistory />\r\n\r\n        </div>\r\n\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\" style={{backgroundColor:\"#252525\"}}>\r\n          \r\n          <Trafik />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n\r\n               <div className=\"col-6 col-sm-12 col-xs-12 col-md-6\">\r\n                <table className=\"table table-borderless\" style={{margin:0}}>\r\n                    <caption>Daftar Beli</caption>\r\n                    <thead>\r\n                      <tr className=\"text-white\">\r\n                        <td>HARGA</td>\r\n                        <td>JUMLAH</td>\r\n                        <td>TOTAL</td>\r\n                      </tr>\r\n                    </thead>\r\n                </table>\r\n                <TabelBeli Judul=\"BELI\" />\r\n              </div>\r\n\r\n              <div className=\"col-6 col-sm-12 col-xs-12 col-md-6\">\r\n                <table className=\"table table-borderless\" style={{margin:0}}>\r\n                    <caption>Daftar Jual</caption>\r\n                    <tr className=\"text-white\">\r\n                      <td>HARGA</td>\r\n                      <td>JUMLAH</td>\r\n                      <td>TOTAL</td>\r\n                    </tr>\r\n                </table>\r\n                <TabelJual Judul=\"JUAL\" />\r\n              </div>\r\n            </div>\r\n\r\n\r\n          <div className=\"row\" style={{backgroundColor:\"#252525\"}}>\r\n            <div className=\"col-6\">\r\n              <FormJual />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <FormBeli />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}","export function setChart(Data){\r\n  \r\n  return {\r\n    type: \"setChart\",\r\n    ...Data,\r\n  };\r\n}\r\n\r\nexport function setDataJual({Data,last}){\r\n  \r\n  return {\r\n    type: \"setDataJual\",\r\n    Data,\r\n    last,\r\n  };\r\n}\r\n\r\nexport function setDataBeli({Data,last}){\r\n  \r\n  return {\r\n    type: \"setDataBeli\",\r\n    Data,\r\n    last\r\n  };\r\n}","import React from \"react\";\r\n\r\n\r\nimport LoginSend from \"../Fungsi/Login\";\r\n\r\nimport { useHistory,Link } from \"react-router-dom\";\r\n\r\nimport \"./LoginForm.css\";\r\n\r\nexport default function Login() {\r\n\r\n  let history = useHistory();\r\n\r\n  const [DataLogin, setDataLogin] = React.useState({\r\n    email:\"\",\r\n    password:\"\"\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n      setDataLogin({ ...DataLogin, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    LoginSend({DataLogin,history})\r\n  }\r\n  \r\n  return (\r\n    <form className=\"posisiForm\" onSubmit={handleSubmit}>\r\n    <h5 align=\"center\">Login Trade</h5>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-12 mt-2\">\r\n            <label for=\"email\">\r\n              <small>Email</small>\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" name={Object.keys(DataLogin)[0]} value={Object.values(DataLogin)[0]} onChange={handleInput} />\r\n            <label for=\"password\">\r\n              <small>Password</small>\r\n            </label>\r\n            <input type=\"text\"\r\n              className=\"form-control\" name={Object.keys(DataLogin)[1]} value={Object.values(DataLogin)[1]} onChange={handleInput}\r\n          />\r\n            <div className=\"d-block mt-2\" align=\"right\">\r\n            <Link to=\"/trading/daftar\" className=\"m-2\">\r\n              Daftar\r\n            </Link>  \r\n            <button className=\"btn btn-outline-success\">\r\n                <small>Login</small>\r\n              </button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport FormLogin from \"../Form/FormLogin\";\r\n\r\nexport default function Login() {\r\n  \r\n  return (\r\n    <FormLogin />\r\n  );\r\n}","import React from \"react\";\r\n\r\n\r\nimport DaftarSend from \"../Fungsi/Daftar\";\r\n\r\nimport { useHistory,Link } from \"react-router-dom\";\r\n\r\nimport \"./LoginForm.css\";\r\n\r\nexport default function Daftar() {\r\n\r\n  let history = useHistory();\r\n\r\n  const [DataDaftar, setDataDaftar] = React.useState({\r\n    username:\"\",\r\n    email:\"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n      setDataDaftar({ ...DataDaftar, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    DaftarSend({DataDaftar,history})\r\n  }\r\n  \r\n  return (\r\n    <form className=\"posisiForm\" onSubmit={handleSubmit}>\r\n      <h5 align=\"center\">Daftar Trade</h5>\r\n        <div className=\"form-group row\">\r\n        <div className=\"col-12 mt-2\">\r\n            <label for=\"password\">\r\n              <small>Username</small>\r\n            </label>\r\n            <input type=\"text\"\r\n              className=\"form-control\" name={Object.keys(DataDaftar)[0]} value={Object.values(DataDaftar)[0]} onChange={handleInput}\r\n              />\r\n            <label for=\"email\">\r\n              <small>Email</small>\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" name={Object.keys(DataDaftar)[1]} value={Object.values(DataDaftar)[1]} onChange={handleInput} />\r\n            <label for=\"password\">\r\n              <small>Password</small>\r\n            </label>\r\n            <input type=\"text\"\r\n              className=\"form-control\" name={Object.keys(DataDaftar)[2]} value={Object.values(DataDaftar)[2]} onChange={handleInput}\r\n            />\r\n            <div className=\"d-block mt-2\" align=\"right\">\r\n              <Link to=\"/trading\">LOGIN</Link>\r\n              <button className=\"btn btn-outline-success\">\r\n                <small>DAFTAR</small>\r\n              </button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}","import axios from \"axios\";\r\nimport Toast from \"cogo-toast\";\r\n\r\nexport default function DaftarSend({ DataDaftar,history }) {\r\n  axios({\r\n    url: `${process.env.REACT_APP_URL_LOCALHOST}/user`,\r\n    method: \"POST\",\r\n    headers: {\r\n      jwttoken:localStorage.getItem(\"token\")\r\n    },\r\n    data: {\r\n      ...DataDaftar\r\n    }\r\n  }).then(({ data }) => {\r\n    Toast.success(data.message);\r\n    history.push(\"/trading\");\r\n  }).catch((err) => {\r\n    let msg = \"\";\r\n    if (err.response === undefined) {\r\n      msg = err.message;\r\n    } else {\r\n      msg = err.response.data.message;\r\n    }\r\n    Toast.error(msg);\r\n  })\r\n}\r\n","import React from \"react\";\r\n\r\nimport FormLogout from \"../Form/FormDaftar\";\r\n\r\nexport default function Daftar() {\r\n  \r\n  return (\r\n    <FormLogout />\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport { Route,Redirect } from \"react-router-dom\";\r\n\r\nimport Auth from \"./Auth\";\r\n\r\nexport default function ProteksiRoute({ component: Component,...rest }) {\r\n  \r\n  return (\r\n    <Route {...rest} render={(props) => {\r\n      if (Auth.isLogin) {\r\n        return <Component {...rest} />\r\n      } else {\r\n        return <Redirect to={{\r\n          pathname: \"/\", state: {\r\n            from:props.location\r\n          }\r\n        }} />\r\n      }\r\n    }} />\r\n  )\r\n  \r\n}","import React from 'react';\r\n\r\n//import Dashboard from \"./Pages/Dashboard\";\r\n\r\nimport Dashboard from \"./Pages/DashboardClone\";\r\nimport Login from './Pages/Login';\r\nimport Daftar from './Pages/Daftar';\r\n\r\nimport ProteksiRoute from \"./ProteksiRoute\";\r\nimport Auth from \"./Auth\";\r\nimport { Route, Switch, useHistory, withRouter } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  \r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      Auth.onLogin(() => {\r\n          history.push(\"/trading/dashboard\");\r\n      });\r\n    } else {\r\n      Auth.onLogout(() => {\r\n        history.push(\"/trading\");\r\n      });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n      <Switch>\r\n        <Route exact path={`/trading`}>\r\n          <Login />\r\n        </Route>\r\n        <Route path={`/trading/daftar`}>\r\n          <Daftar />\r\n        </Route>\r\n        <ProteksiRoute path={`/trading/dashboard`} component={Dashboard} />\r\n      </Switch>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {\r\n  TradeJual: {\r\n    market:[]\r\n  },\r\n  TradeBeli: {\r\n    market:[]\r\n  },\r\n  TradeMe:{\r\n    market:[]\r\n  }\r\n};\r\n\r\nexport function TradeState(state=initialState,action){\r\n  \r\n  switch (action.type) {\r\n    case \"TradeJual\":\r\n      return {\r\n        ...state,\r\n        TradeJual: {\r\n          ...state.TradeJual,\r\n          market:action.market\r\n        }\r\n      };\r\n    case \"TradeBeli\":\r\n      return {\r\n        ...state,\r\n        TradeBeli: {\r\n          ...state.TradeBeli,\r\n          market:action.market\r\n        }\r\n      };\r\n      case \"TradeAll\":\r\n      return {\r\n        ...state,\r\n          TradeMe: {\r\n            ...state.TradeMe,\r\n            market:action.market\r\n          }\r\n        };\r\n    default:\r\n      return { ...state };\r\n  }\r\n\r\n}","let initialState = {\r\n    User:null,\r\n    setForm:{\r\n        beli:{\r\n          tipe:\"\",\r\n          jumlah:\"\",\r\n          harga:\"\"\r\n        },\r\n        jual:{\r\n          tipe:\"\",\r\n          jumlah:\"\",\r\n          harga:\"\"\r\n        },\r\n    }\r\n};\r\n\r\nexport default function UserState(state=initialState,action){\r\n  \r\n  switch (action.type) {\r\n    case \"setInfoUser\":\r\n      return {\r\n        ...state,\r\n        User:action.User\r\n      };\r\n    \r\n   case \"setForm\":\r\n    return {\r\n        ...state,\r\n        setForm:{\r\n          ...state.setForm,\r\n          beli:{\r\n            ...state.setForm.beli,\r\n            tipe:action.tipe,\r\n            jumlah:action.jumlah,\r\n            harga:action.harga,\r\n          },\r\n          jual:{\r\n            ...state.setForm.jual,\r\n            tipe:action.tipe,\r\n            jumlah:action.jumlah,\r\n            harga:action.harga,\r\n          }\r\n        }\r\n    }; \r\n\r\n    case \"setFormJual\":\r\n    return {\r\n        ...state,\r\n        setForm:{\r\n          ...state.setForm,\r\n          jual:{\r\n            ...state.setForm.jual,\r\n            tipe:action.tipe,\r\n            jumlah:action.jumlah,\r\n            harga:action.harga,\r\n          }\r\n        }\r\n    }; \r\n\r\n    case \"setFormBeli\":\r\n    return {\r\n        ...state,\r\n        setForm:{\r\n          ...state.setForm,\r\n          beli:{\r\n            ...state.setForm.beli,\r\n            tipe:action.tipe,\r\n            jumlah:action.jumlah,\r\n            harga:action.harga,\r\n          }\r\n        }\r\n    }; \r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n\r\n}","const MAX_DATA=10;\r\nlet initialState = {\r\n    Grafik:[],\r\n    LabelNew:[],\r\n    DataBeli:[],\r\n    DataJual:[],\r\n    lastJual:0,\r\n    lastBeli:0,\r\n    highPrice:0,\r\n    lowPrice:0,\r\n    lastPriceAll:0,\r\n};\r\n\r\nexport default function HistoryStore(state=initialState,action){\r\n  \r\n  switch (action.type) {\r\n    case \"setChart\":\r\n      let sorts=action.Data?action.Data.sort((a,b)=>b.latestHarga-a.latestHarga):[];\r\n\r\n      return {\r\n        ...state,\r\n        Grafik:action.Data,\r\n        LabelNew:typeof action.LabelNew===\"object\"?action.LabelNew.reverse().filter((item,index)=>index<=MAX_DATA?item:null):[],\r\n        DataBeli:typeof action.DataBeli===\"object\"?action.DataBeli.reverse().filter((item,index)=>index<=MAX_DATA?item:null):[],\r\n        lastBeli:action.lastBeli,\r\n        DataJual:typeof action.DataJual===\"object\"?action.DataJual.reverse().filter((item,index)=>index<=MAX_DATA?item:null):[],\r\n        lastJual:action.lastJual,\r\n      };\r\n    case \"setDataJual\":\r\n        return {\r\n          ...state,\r\n          DataBeli:action.Data,\r\n          lastBeli:action.last\r\n      };\r\n\r\n    case \"setDataBeli\":\r\n        return {\r\n          ...state,\r\n          DataJual:action.Data,\r\n          lastJual:action.last\r\n      };\r\n    \r\n    default:\r\n      return { ...state };\r\n  }\r\n\r\n}","import React from \"react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { reduxSoldierMiddleware } from \"redux-soldier\";\r\n\r\nimport { TradeState } from \"../Store/storeRedux/TabelMarketStore\";\r\nimport UserState from \"../Store/storeRedux/infoUserStore\";\r\nimport storeHistory from \"../Store/storeRedux/storeHistory\";\r\n\r\nexport default function ReduxState({ children }) {\r\n  \r\n  let STORE = combineReducers({\r\n    TradeState,\r\n    UserState,\r\n    storeHistory\r\n  });\r\n\r\n  let STORED = createStore(STORE, composeWithDevTools(applyMiddleware(reduxSoldierMiddleware)));\r\n  \r\n  return (\r\n    <Provider store={STORED}>\r\n      {children}\r\n    </Provider>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport ReduxState from \"./Store/index\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <ReduxState>\r\n        <App />\r\n      </ReduxState>\r\n    </React.StrictMode>\r\n  </Router>\r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}